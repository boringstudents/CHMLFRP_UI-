name: Build ChmlFrp UI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

env:
  APP_NAME: ChmlFrp_UI
  VERSION: 2.1.0
  AUTHOR: boring_student

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install -r requirements.txt

    - name: Build with Nuitka
      run: |
        python -m nuitka --windows-icon-from-ico=favicon.ico --onefile --enable-plugin=pyqt6 --include-qt-plugins=all --follow-imports --output-dir=dist --output-filename=${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.exe main.py

    - name: Create distribution package
      run: |
        mkdir dist_package
        copy dist\${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.exe dist_package\
        copy favicon.ico dist_package\
        copy README.md dist_package\
        copy LICENSE dist_package\
        echo Author: ${{ env.AUTHOR }} > dist_package\AUTHOR.txt
        echo Version: ${{ env.VERSION }} >> dist_package\AUTHOR.txt

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path dist_package\* -DestinationPath ${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}
        path: ${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.zip

    - name: Upload release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.zip
        asset_name: ${{ env.APP_NAME }}_${{ env.VERSION }}_by_${{ env.AUTHOR }}.zip
        asset_content_type: application/zip
